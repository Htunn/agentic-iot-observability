version: '3.8'

services:
  llm_service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: iot_llm_service
    volumes:
      - .:/app/src:ro # read-only bind mount for code
      - ./models:/app/models # bind mount for models directory
      # For GPU access (uncomment if using GPU)
      # - /dev/dri:/dev/dri:rw # Intel GPU
      # - /dev/nvidia0:/dev/nvidia0:rw # NVIDIA GPU
      # - /dev/nvidiactl:/dev/nvidiactl:rw # NVIDIA GPU
      # - /dev/nvidia-uvm:/dev/nvidia-uvm:rw # NVIDIA GPU
    ports:
      - "127.0.0.1:8080:8080" # Only expose to localhost for security
    environment:
      # MongoDB connection (can connect to external MongoDB)
      - MONGODB_URI=${MONGODB_URI:-mongodb://host.docker.internal:27017/}
      - MONGODB_DB=${MONGODB_DB:-iot_metrics}
      
      # Model configuration
      - MODEL_PATH=/app/models/tinyllama-1.1b-chat-v1.0.Q4_K_M.gguf
      - USE_GPU=${USE_GPU:-auto} # auto, true, false
      - USE_MOCK_LLM=${USE_MOCK_LLM:-false}
      
      # Performance tuning
      - MAX_TOKENS=${MAX_TOKENS:-1024}
      - TEMPERATURE=${TEMPERATURE:-0.7}
      - N_CTX=${N_CTX:-2048}
      - N_THREADS=${N_THREADS:-4}
      
      # Rate limiting
      - RATE_LIMIT_REQUESTS=${RATE_LIMIT_REQUESTS:-60}
      - RATE_LIMIT_PERIOD=${RATE_LIMIT_PERIOD:-60}
      
      # Optional: HuggingFace token for model download
      # - HF_TOKEN=${HF_TOKEN:-}
    
    # For GPU support (uncomment if using GPU)
    # runtime: nvidia # For NVIDIA GPU
    # environment:
    #   - NVIDIA_VISIBLE_DEVICES=all
    #   - NVIDIA_DRIVER_CAPABILITIES=compute,utility
    
    restart: unless-stopped
    
    # Resource limits to prevent resource exhaustion
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 8G
        reservations:
          cpus: '1'
          memory: 2G
    
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 60s
      timeout: 10s
      retries: 5
      start_period: 60s
    
    # Use host network for easier MongoDB connection (optional)
    # network_mode: host
    
    # Security settings
    security_opt:
      - no-new-privileges:true
    # user: "1000:1000" # Run as non-root user (temporarily disabled for model download)
    # read_only: true # (temporarily disabled for model download)
    tmpfs:
      - /tmp:noexec,nosuid,size=100m

volumes:
  llm_models:
    driver: local
